<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui">
    <ui:composition>

        <h:outputScript library="scripts" name="jqplot.canvasAxisTickRenderer.js" />
        <h:outputScript library="scripts" name="jqplot.canvasAxisTickRenderer.min.js" />
        <h:outputScript library="scripts" name="jqplot.dateAxisRenderer.js" />
        <h:outputScript library="scripts" name="jqplot.dateAxisRenderer.min.js" />

        <p:commandButton type="button" value="Reset" icon="ui-icon-cancel" onclick="PF('chart').resetZoom()"/> 
  <!--datatipFormat="#{hechoController.datatipFormat}"-->
        <p:barChart id="horizontal" value="#{hechoController.categoryModel}" legendPosition="se" style="height:800px"  
                    title="Estadisticas por tarea y usuario" orientation="horizontal" min="0" 
                    max="#{hechoController.maxBarValue}" zoom="true" widgetVar="chart"  
                    /> 
        <script>
//            function secondsToTime(secs){
//                var hours = Math.floor(secs / (60 * 60));
//
//                var divisor_for_minutes = secs % (60 * 60);
//                var minutes = Math.floor(divisor_for_minutes / 60);
//
//                var divisor_for_seconds = divisor_for_minutes % 60;
//                var seconds = Math.ceil(divisor_for_seconds);
//
//                var obj = {
//                    "h": hours,
//                    "m": minutes,
//                    "s": seconds
//                };
//                return obj;
//            }
//            (function($) {
//                $.jqplot.secondsToTime = function(val) {
//                    var totalSec = new Date().getTime() / 1000;
//                    hours = parseInt(val / 3600) % 24;
//                    minutes = parseInt(val / 60) % 60;
//                    seconds = totalSec % 60;
//                    result = (hours < 10 ? '0' + hours : hours) + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);
//                    return result;
//                };
//            })


            function ext2() {
                //this = chart widget instance
//              this.cfg.seriesDefaults = {
//                renderer:$.jqplot.BarRenderer,
//                rendererOptions: {fillToZero: true}
//              },
//              this.cfg.axes = {
//                xaxis:{
//                    renderer:$.jqplot.DateAxisRenderer, 
//                    rendererOptions:{
//                     tickRenderer:$.jqplot.CanvasAxisTickRenderer
//                    },
//                    tickOptions:{ 
//                       fontSize:'10pt',
//                       fontFamily:'Tahoma', 
//                       formatString:'%T',
//                       angle:-40
//                    }
//                }
//                ,yaxis:{
//                   labelOptions: { fontFamily: 'Verdana', fontSize: '8pt' },
//                   renderer:$.jqplot.CategoryAxisRenderer,
//                   labelRenderer: $.jqplot.CanvasTextRenderer,
//                   rendererOptions:{
//                       tickRenderer:$.jqplot.CanvasAxisTickRenderer
//                   },
//                   tickOptions:{
//                       fontSize:'10pt', 
//                       fontFamily:'Tahoma', 
//                       angle:30
//                   }
//                 }
//              };
            }
        </script>
    </ui:composition>

</html>
